<?php

namespace Tests\Feature;

use Tests\TestCase;
use Illuminate\Foundation\Testing\WithFaker;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\DatabaseTransactions;

class GroupTest extends TestCase
{
    use RefreshDatabase ;

    protected $user;

    public function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->user  = factory('App\User')->create();
        $this->actingAs($this->user);
    }

    /** @test **/

    public function admin_can_create_a_group()
    {
      $this->create_and_assing_role('Admin');
      $this->post('group',['name' => 'test']);
      $this->assertDatabaseHas('groups',['name'=>'test']);
    }


    /** @test **/

    public function admin_can_update_a_group()
    {
      $this->create_and_assing_role('Admin');
      $group = factory('App\Group')->create(['name' => 'Test']);
      $this->put('group/'.$group->id,['name' => 'This updated']);
      $this->assertDatabaseHas('groups',['name'=>'This updated']);
    }

    /** @test **/

    public function admin_can_delete_a_group()
    {
      $this->create_and_assing_role('Admin');
      $group = factory('App\Group')->create(['name' => 'Test']);
      $this->delete('group/'.$group->id);
      $this->assertDatabaseMissing('groups',['id'=> $group->id]);
    }


    /** @test **/

    public function a_user_can_not_view_a_group()
    {
      $this->post('/group')->assertStatus(404);
    }

    /** @test **/

    public function guests_can_not_view_a_groups()
    {
      \Auth::logout();
      $this->get('/group')->assertStatus(302);
    }

    public function create_and_assing_role($role)
    {
      $role  = factory('App\Role')->create(['name' => $role]);
      $this->user->assignRoles($role->id);
    }


}
